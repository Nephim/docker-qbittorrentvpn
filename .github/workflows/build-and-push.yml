name: Build and Push Docker Image

on:
  repository_dispatch:
    types: [qbittorrent_release]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Extract version from payload
        id: extract_version
        shell: bash
        run: |
          DESCRIPTION="${{ github.event.client_payload.description }}"
          echo "Description: $DESCRIPTION"
          
          # Check for 'beta' or 'rc' in the description to exclude pre-releases
          if [[ "$DESCRIPTION" == *beta* ]] || [[ "$DESCRIPTION" == *rc* ]]; then
            echo "Beta or RC version detected in description. Skipping build."
            echo "skip_build=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Extract version from description using regex
          # Example: From "/qbittorrent-win32/qbittorrent-5.0.0/README" extract "5.0.0"
          VERSION=$(echo "$DESCRIPTION" | grep -oP 'qbittorrent-\K[0-9]+\.[0-9]+\.[0-9]+')
          echo "Version: $VERSION"

          # Check if version is empty
          if [ -z "$VERSION" ]; then
            echo "No valid version found in description. Exiting."
            exit 1
          fi

          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Check if build was skipped
        if: steps.extract_version.outputs.skip_build == 'true'
        run: echo "Build was skipped due to beta or RC version."

      - name: Check if Docker image already exists
        if: steps.extract_version.outputs.skip_build != 'true'
        env:
          DOCKERHUB_USERNAME: nephim
          REPO_NAME: qbittorrentvpn
          VERSION: ${{ steps.extract_version.outputs.version }}
        run: |
          IMAGE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
          https://hub.docker.com/v2/repositories/$DOCKERHUB_USERNAME/$REPO_NAME/tags/$VERSION/)
          if [ "$IMAGE_EXISTS" -eq 200 ]; then
            echo "Image with version $VERSION already exists. Skipping build."
            exit 0
          else
            echo "Image with version $VERSION does not exist. Proceeding to build."
          fi

      - name: Checkout repository
        if: steps.extract_version.outputs.skip_build != 'true'
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        if: steps.extract_version.outputs.skip_build != 'true'
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        if: steps.extract_version.outputs.skip_build != 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        if: steps.extract_version.outputs.skip_build != 'true'
        env:
          VERSION: ${{ steps.extract_version.outputs.version }}
          DOCKERHUB_USERNAME: nephim
        run: |
          docker build --build-arg QBITTORRENT_VERSION=$VERSION \
          -t $DOCKERHUB_USERNAME/qbittorrentvpn:$VERSION .
          docker push $DOCKERHUB_USERNAME/qbittorrentvpn:$VERSION
          docker tag $DOCKERHUB_USERNAME/qbittorrentvpn:$VERSION $DOCKERHUB_USERNAME/qbittorrentvpn:latest
          docker push $DOCKERHUB_USERNAME/qbittorrentvpn:latest
